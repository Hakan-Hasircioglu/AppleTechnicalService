@page "/masters"

@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using TechServe.Model
@using TechServe.Data
@using Services
@using TechServe.Components.Helpers

@inject IDbContextFactory<TechServe.Data.TechServeContext> DbFactory
@inject TechServeContext DbContext
@inject NavigationManager NavigationManager
@inject NavigationManager NavigationManager
@inject LoggedInStaff LoggedInStaff
@inject RoleService RoleService

<PageTitle>Service Hub</PageTitle>

<h1>Service Hub</h1>
@if (isLoading)
{
    <div class="spinner">Loading...</div>
}
else
{
<p>
    <a href="masters/create" class="btn btn-edit">Add New Device</a>
</p>
<div class="table-container">
        <!-- Filtreleme Alanları -->
        <div class="filter-section">
            <div class="row justify-content-between">
                <div class="col-md-2">
                    <label>Customer Name:</label>
                    <input type="text" @oninput="OnCustomerNameChangedHandler" class="form-control" placeholder="Search by name" />
                </div>
                <div class="col-md-2">
                </div>
                <div class="col-md-2">
                    <label>Service Code:</label>
                    <input type="text" @oninput="OnBarcodeChangedHandler" class="form-control" placeholder="Search by Service code" />
                </div>
                <div class="col-md-1">
                    <label>Brand:</label>
                    <select @onchange="OnBrandChangedHandler" class="form-select">
                        <option value="">All</option>
                        <option value="Apple">Apple</option>
                        <option value="Samsung">Samsung</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label>Model:</label>
                    <select @onchange="OnModelChangedHandler" class="form-select">
                        <option value="">All</option>
                        <option value="iPhone 11">iPhone 11</option>
                        <option value="iPhone 11 Pro">iPhone 11 Pro</option>
                        <option value="iPhone 11 Pro Max">iPhone 11 Pro Max</option>
                        <option value="iPhone 12">iPhone 12</option>
                        <option value="iPhone 12 Pro">iPhone 12 Pro</option>
                        <option value="iPhone 12 Pro Max">iPhone 12 Pro Max</option>
                        <option value="iPhone 13">iPhone 13</option>
                        <option value="iPhone 13 Pro">iPhone 13 Pro</option>
                        <option value="iPhone 13 Pro Max">iPhone 13 Pro Max</option>
                        <option value="iPhone 14">iPhone 14</option>
                        <option value="iPhone 14 Pro">iPhone 14 Pro</option>
                        <option value="iPhone 14 Pro Max">iPhone 14 Pro Max</option>
                        <option value="iPhone 15">iPhone 15</option>
                        <option value="iPhone 15 Pro">iPhone 15 Pro</option>
                        <option value="iPhone 15 Pro Max">iPhone 15 Pro Max</option>
                    </select>
                </div>
                <div class="col-md-1">
                    <label>Type:</label>
                    <select @onchange="OnServiceTypeChangedHandler" class="form-select">
                        <option value="">All</option>
                        <option value="Repair">Repair</option>
                        <option value="Replacement">Replacement</option>
                    </select>
                </div>
                <div class="col-md-1">
                    <label>Status:</label>
                    <select @onchange="OnServiceStatusChangedHandler" class="form-select">
                        <option value="">All</option>
                        <option value="Completed">Completed</option>
                        <option value="Pending">Pending</option>
                    </select>
                </div>
            </div>
        </div>
<!-- Table Display -->
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Customer Name</th>
            <th>Brand</th>
            <th>Model</th>
            <th>Service Type</th>
            <th>Service Status</th>
            <th>Service Code</th>
            <th>Price</th>
            <th>Arrival</th>
            <th>Completion</th>
            <th>Controls</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var master in filteredMasters)
        {
            <tr>
                <td>@master.CostumerName</td>
                <td>@master.DevicelBrand</td>
                <td>@master.DevicelModel</td>
                <td>@master.TypeOfService</td>
                <td>@master.ServiceStatus</td>
                <td>@master.ServiceCode</td>
                <td>@master.Price</td>
                <td>@master.ArrivalDate.ToString("yyyy-MM-dd")</td>
                <td>
                    @if (master.CompletionDate == DateOnly.MinValue)
                    {
                        <span>Not Completed</span>
                    }
                    else
                    {
                        <span>@master.CompletionDate.ToString("yyyy-MM-dd")</span>
                    }
                </td>
                <td>
                    @if (RoleService.Role != "Staff")
                    {
                        <a href="@($"masters/edit?id={master.id}")" class="btn btn-edit btndiff">Edit</a>
                    } |
                    <a href="@($"masters/details?id={master.id}")" class="btn btn-edit btndiff">Details</a> |
                    @if (RoleService.Role != "Staff")
                    {
                        <a href="@($"masters/delete?id={master.id}")" class="btn btn-edit btndiff btndlt">Delete</a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
</div>
}
@code {
    private Master master { get; set; }
    private IEnumerable<Master> allMasters;
    private IEnumerable<Master> filteredMasters;
    private string selectedServiceType = string.Empty; 
    private string selectedServiceStatus = string.Empty;
    private string selectedModel = string.Empty;
    private string selectedBrand = string.Empty;
    private string customerNameSearch = string.Empty;
    private string selectedStatus = string.Empty;
    private string BarcodeSearch = string.Empty;
    private bool isLoading = true;
    protected override async Task OnInitializedAsync()
    {
        await Task.Delay(500);
        isLoading = false;
        var loggedInStaff = await DbContext.LoggedInStaff.FirstOrDefaultAsync();
        if (loggedInStaff != null)
        {
            RoleService.UpdateSharedData($"{loggedInStaff.Role}");
        }
    }
    protected override void OnInitialized()
    {
        // Veriyi al
        allMasters = DbFactory.CreateDbContext().Master;
        // Başlangıçta tüm verileri göster
        filteredMasters = allMasters;
    }
    private void OnBarcodeChangedHandler(ChangeEventArgs e)
    {
        BarcodeSearch = e.Value.ToString();
        FilterData();
    }
    private void OnServiceTypeChangedHandler(ChangeEventArgs e)
    {
        selectedServiceType = e.Value.ToString();
        FilterData();
    }
    private void OnServiceStatusChangedHandler(ChangeEventArgs e)
    {
        selectedServiceStatus = e.Value.ToString();
        FilterData();
    }
    private void OnModelChangedHandler(ChangeEventArgs e)
    {
        selectedModel = e.Value.ToString();
        FilterData();
    }

    private void OnBrandChangedHandler(ChangeEventArgs e)
    {
        selectedBrand = e.Value.ToString();
        FilterData();
    }

    private void OnCustomerNameChangedHandler(ChangeEventArgs e)
    {
        customerNameSearch = e.Value.ToString().ToLower();
        FilterData();
    }

    private void FilterData()
    {
        filteredMasters = allMasters
         .Where(master => (string.IsNullOrEmpty(selectedServiceType) || master.TypeOfService == selectedServiceType)
                       && (string.IsNullOrEmpty(selectedModel) || master.DevicelModel == selectedModel)
                       && (string.IsNullOrEmpty(selectedBrand) || master.DevicelBrand == selectedBrand)
                       && (string.IsNullOrEmpty(selectedServiceStatus) || master.ServiceStatus == selectedServiceStatus)
                       && (string.IsNullOrEmpty(customerNameSearch) || master.CostumerName.ToLower().Contains(customerNameSearch))
                       && (string.IsNullOrEmpty(BarcodeSearch) || master.ServiceCode.Contains(BarcodeSearch)));
    }
}

   <style>

    .filter-section {
        border: 2px solid #0461ae; 
        border-radius: 4px; 
        padding: 5px; 
        background-color: #f5f5f5; 
        margin-bottom: 5px; 
    }
    
    .select-container {
        display: flex;
        justify-content: flex-end; 
        padding: 10px; 
        background-color: #edd7d3; 
    }

        .select-container select {
            width: auto; 
            max-width: 200px; 
        }
    
    .btn {
        display: inline-block;
        padding: 10px 20px;
        margin: 5px;
        font-size: 16px;
        font-weight: bold;
        text-align: center;
        text-decoration: none;
        border-radius: 5px;
        border: 2px solid; 
        background-color: transparent; 
        color: currentColor; 
        transition: background-color 0.3s, color 0.3s;
    }

    .btn-edit {
        border-color: #0461ae; 
        color: #0461ae; 
    }

        .btn-edit:hover {
            background-color: #007bff; 
            color: white; 
        }

    .btn-back {
        border-color: #6c757d; 
        color: #6c757d; 
    }

        .btn-back:hover {
            background-color: #6c757d; 
            color: white; 
        }

    .table-container {
        width: 100%;
        overflow-x: auto; 
        margin: 20px 0;
    }

    .table {
        width: 100%;
        min-width: 400px; 
        border-collapse: collapse; 
        font-family: Arial, sans-serif;
        background-color: #ffffff; 
        color: #333; 
    }

        .table th, .table td {
            padding: 5px;
            text-align: left;
            border: 1px solid #0461ae; 
            white-space: nowrap; 
        }

        .table th {
            background-color: #add8e6; 
            font-weight: bold;
        }

        .table tr:nth-child(even) {
            background-color: #e6f7ff; 
        }

    .table-hover tbody tr:hover {
        background-color: #b3e0ff; 
    }
    .btndiff{
        padding: 0px 6px;
        margin: 1px;
        font-size: 9px;
    }

    .btndlt{

        border-color: #ff0f00;
        color: #ff0f00;
    }

    .btndlt:hover {
        background-color: #ff0f00; 
        color: white;
    }
    </style>