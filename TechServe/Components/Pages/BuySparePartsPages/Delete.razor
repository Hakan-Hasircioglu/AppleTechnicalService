@page "/buyspareparts/delete"

@using Microsoft.EntityFrameworkCore
@using TechServe.Model
@inject IDbContextFactory<TechServe.Data.TechServeContext> DbFactory
@inject NavigationManager NavigationManager


<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>BuySpareParts</h4>
    <hr />
    @if (buyspareparts is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">SparePartsBrand</dt>
            <dd class="col-sm-10">@buyspareparts.SparePartsBrand</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SparePartsModel</dt>
            <dd class="col-sm-10">@buyspareparts.SparePartsModel</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">PartsType</dt>
            <dd class="col-sm-10">@buyspareparts.PartsType</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AmountOfSpareParts</dt>
            <dd class="col-sm-10">@buyspareparts.AmountOfSpareParts</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Barcode</dt>
            <dd class="col-sm-10">@buyspareparts.Barcode</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SparePrice</dt>
            <dd class="col-sm-10">@buyspareparts.SparePrice</dd>
        </dl>
        <EditForm method="post" Model="buyspareparts" OnValidSubmit="DeleteBuySpareParts" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(buyspareparts is null)">Delete</button> |
            <a href="/buyspareparts">Back to List</a>
        </EditForm>
    }
</div>

@code {
    BuySpareParts? buyspareparts;

    [SupplyParameterFromQuery]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        buyspareparts = await context.BuySpareParts.FirstOrDefaultAsync(m => m.id == id);

        if (buyspareparts is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteBuySpareParts()
    {
        using var context = DbFactory.CreateDbContext();
        context.BuySpareParts.Remove(buyspareparts!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/buyspareparts");
    }
}
