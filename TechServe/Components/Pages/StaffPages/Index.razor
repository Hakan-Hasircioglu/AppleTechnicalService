@page "/staff"

@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using TechServe.Model
@using TechServe.Data
@using Services
@using TechServe.Components.Helpers

@inject IDbContextFactory<TechServe.Data.TechServeContext> DbFactory
@inject TechServeContext DbContext
@inject NavigationManager NavigationManager
@inject NavigationManager NavigationManager
@inject LoggedInStaff LoggedInStaff
@inject RoleService RoleService
<PageTitle>Employees</PageTitle>
@if (isLoading)
{
    <div class="spinner">Loading...</div>
}
else
{
    <h1>Employees</h1>

    <p>
        <a href="staff/create" class="btn btn-edit">Add New Employees</a>
    </p>

     <div class="filter-section">
            <div class="row justify-content-between">
                <div class="col-md-2">
                    <label>Employee Name:</label>
                    <input type="text" @oninput="OnEmployeesNameChangedHandler" class="form-control" placeholder="Search by name" />
                </div>
            </div>
</div>
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>Full Name</th>
            <th>Staff Username</th>
            <th>Password</th>
            <th>Role</th>
            <th>Controll</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var staff in filteredMasters)
        {
            <tr>
                <td>@staff.FullName</td>
                <td>@staff.StaffUsername</td>
                <td>@staff.PasswordSimple</td>
                @if(RoleService.Role == "Admin")
                {
                <td>@staff.PasswordHash</td>
                }
                <td>@staff.Role</td>
            
                <td>
                    @if (RoleService.Role == "Manager")
                    {
                            @if (staff.Role != "Admin")
                            {
                             <a href="@($"staff/edit?id={staff.id}")" class="btn btn-edit btndiff">Edit</a><span>|</span>
                            }
                            <a href="@($"staff/details?id={staff.id}")" class="btn btn-edit btndiff">Details</a><span>|</span>
                            @if (staff.Role != "Admin")
                            {
                            <a href="@($"staff/delete?id={staff.id}")" class="btn btn-edit btndiff btndlt">Delete</a>
                            }
                    } 
                    else
                    {                          
                             <a href="@($"staff/edit?id={staff.id}")" class="btn btn-edit btndiff">Edit</a> <span>|</span
                            <a href="@($"staff/details?id={staff.id}")" class="btn btn-edit btndiff">Details</a> <span>|</span>
                            <a href="@($"staff/delete?id={staff.id}")" class="btn btn-edit btndiff btndlt">Delete</a>                        
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
}

@code {
    TechServeContext context = default!;
    private IEnumerable<Staff> allMasters;
    private IEnumerable<Staff> filteredMasters;
    private string employeesNameSearch = string.Empty;
    private bool isLoading = true;
    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();

        allMasters = DbFactory.CreateDbContext().Staff;
        // Başlangıçta tüm verileri göster
        filteredMasters = allMasters;
    }
    protected override async Task OnInitializedAsync()
    {       
        await Task.Delay(500);
        isLoading = false;
        var loggedInStaff = await DbContext.LoggedInStaff.FirstOrDefaultAsync();
        if (loggedInStaff != null)
        {
            RoleService.UpdateSharedData($"{loggedInStaff.Role}");
        }
    }
    private void OnEmployeesNameChangedHandler(ChangeEventArgs e)
    {
        employeesNameSearch = e.Value.ToString().ToLower();
        FilterData();
    }

    private void FilterData()
    {
        filteredMasters = allMasters
         .Where(staff => (string.IsNullOrEmpty(employeesNameSearch) || staff.FullName.ToLower().Contains(employeesNameSearch)));
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}

<style>

    .filter-section {
        border: 2px solid #0461ae; 
        border-radius: 4px; 
        padding: 5px; 
        background-color: #f5f5f5; 
        margin-bottom: 5px; 
    }
    
    .select-container {
        display: flex;
        justify-content: flex-end; 
        padding: 10px; 
        background-color: #edd7d3; 
    }

        .select-container select {
            width: auto; 
            max-width: 200px; 
        }
    
    .btn {
        display: inline-block;
        padding: 10px 20px;
        margin: 5px;
        font-size: 16px;
        font-weight: bold;
        text-align: center;
        text-decoration: none;
        border-radius: 5px;
        border: 2px solid; 
        background-color: transparent; 
        color: currentColor; 
        transition: background-color 0.3s, color 0.3s;
    }

    .btn-edit {
        border-color: #0461ae; 
        color: #0461ae; 
    }

        .btn-edit:hover {
            background-color: #007bff; 
            color: white; 
        }

    .btn-back {
        border-color: #6c757d; 
        color: #6c757d; 
    }

        .btn-back:hover {
            background-color: #6c757d; 
            color: white; 
        }

    .table-container {
        width: 100%;
        overflow-x: auto; 
        margin: 20px 0;
    }

    .table {
        width: 100%;
        min-width: 400px; 
        border-collapse: collapse; 
        font-family: Arial, sans-serif;
        background-color: #ffffff; 
        color: #333; 
    }

        .table th, .table td {
            padding: 5px;
            text-align: left;
            border: 1px solid #0461ae; 
            white-space: nowrap; 
        }

        .table th {
            background-color: #add8e6; 
            font-weight: bold;
        }

        .table tr:nth-child(even) {
            background-color: #e6f7ff; 
        }

    .table-hover tbody tr:hover {
        background-color: #b3e0ff; 
    }

    .btndiff {
        padding: 0px 6px;
        margin: 1px;
        font-size: 9px;
    }

    .btndlt {
        border-color: #ff0f00;
        color: #ff0f00;
    }

        .btndlt:hover {
            background-color: #ff0f00;
            color: white;
        }
</style>