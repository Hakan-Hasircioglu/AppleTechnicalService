@page "/costumers/details"

@using Microsoft.EntityFrameworkCore
@using TechServe.Model
@inject IDbContextFactory<TechServe.Data.TechServeContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h4>Costumers</h4>
    <hr />
    @if (costumers is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">CostumerName</dt>
            <dd class="col-sm-10">@costumers.CostumerName</dd>
            <dt class="col-sm-2">Phone</dt>
            <dd class="col-sm-10">@costumers.Phone</dd>
            <dt class="col-sm-2">E_Mail</dt>
            <dd class="col-sm-10">@costumers.E_Mail</dd>
            <dt class="col-sm-2">Adress</dt>
            <dd class="col-sm-10">@costumers.Adress</dd>
            <dt class="col-sm-2">City</dt>
            <dd class="col-sm-10">@costumers.City</dd>
            <dt class="col-sm-2">PostalCode</dt>
            <dd class="col-sm-10">@costumers.PostalCode</dd>
        </dl>
        <div>
            <a href="@($"/costumers/edit?id={costumers.id}")">Edit</a> |
            <a href="@($"/costumers")">Back to List</a>
        </div>
    }
</div>

@code {
    Costumers? costumers;

    [SupplyParameterFromQuery]
    public int id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        costumers = await context.Costumers.FirstOrDefaultAsync(m => m.id == id);

        if (costumers is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
